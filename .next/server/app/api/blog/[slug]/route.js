"use strict";(()=>{var e={};e.id=923,e.ids=[923],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3028:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>y,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f});var r={};s.r(r),s.d(r,{DELETE:()=>c,GET:()=>p,PUT:()=>d});var n=s(9303),o=s(8716),i=s(3131),a=s(7070),u=s(4184),l=s(679);async function p(e,{params:t}){try{await (0,u.v)();let{slug:e}=t;if(!e)return a.NextResponse.json({success:!1,message:"Slug is required"},{status:400});let s=await l.Z.findOne({slug:e,published:!0}).lean();if(!s)return a.NextResponse.json({success:!1,message:"Blog post not found"},{status:404});return a.NextResponse.json({success:!0,post:{...s,id:s._id.toString()}})}catch(e){return a.NextResponse.json({success:!1,message:"Failed to fetch blog post"},{status:500})}}async function d(e,{params:t}){try{await (0,u.v)();let{slug:s}=t,r=await e.json();if(!s)return a.NextResponse.json({success:!1,message:"Slug is required"},{status:400});let n=await l.Z.findOneAndUpdate({slug:s},{...r,updatedAt:new Date().toISOString()},{new:!0}).lean();if(!n)return a.NextResponse.json({success:!1,message:"Blog post not found"},{status:404});return a.NextResponse.json({success:!0,message:"Blog post updated successfully",post:{...n,id:n._id.toString()}})}catch(e){return a.NextResponse.json({success:!1,message:"Failed to update blog post"},{status:500})}}async function c(e,{params:t}){try{await (0,u.v)();let{slug:e}=t;if(!e)return a.NextResponse.json({success:!1,message:"Slug is required"},{status:400});let s=await l.Z.findOneAndDelete({slug:e}).lean();if(!s)return a.NextResponse.json({success:!1,message:"Blog post not found"},{status:404});return a.NextResponse.json({success:!0,message:"Blog post deleted successfully",postId:s._id.toString()})}catch(e){return a.NextResponse.json({success:!1,message:"Failed to delete blog post"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/blog/[slug]/route",pathname:"/api/blog/[slug]",filename:"route",bundlePath:"app/api/blog/[slug]/route"},resolvedPagePath:"/workspaces/dilipsingh076.github.io/src/app/api/blog/[slug]/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:x}=g,y="/api/blog/[slug]/route";function h(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}},679:(e,t,s)=>{s.d(t,{Z:()=>i});var r=s(1185),n=s.n(r);let o=new r.Schema({title:{type:String,required:!0,trim:!0},excerpt:{type:String,required:!0,trim:!0},content:{type:String,required:!0},date:{type:String,required:!0},readTime:{type:String,required:!0},category:{type:String,required:!0,trim:!0},author:{type:String,required:!0,trim:!0},slug:{type:String,required:!0,unique:!0,trim:!0},featured:{type:Boolean,default:!1},tags:[{type:String,trim:!0}],image:{type:String,trim:!0},published:{type:Boolean,default:!0},createdAt:{type:String,required:!0},updatedAt:{type:String,required:!0}},{timestamps:!1});o.index({slug:1}),o.index({category:1}),o.index({featured:1}),o.index({published:1}),o.index({tags:1});let i=n().models.Blog||n().model("Blog",o)},4184:(e,t,s)=>{s.d(t,{v:()=>u});var r=s(1185),n=s.n(r);let o=process.env.MONGODB_URI,i=process.env.MONGODB_DB_NAME||"portfolio";if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose||{conn:null,promise:null};async function u(){if(a.conn)return a.conn;a.promise||(a.promise=n().connect(o,{bufferCommands:!1,dbName:i}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}global.mongoose||(global.mongoose=a)}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[276,972],()=>s(3028));module.exports=r})();