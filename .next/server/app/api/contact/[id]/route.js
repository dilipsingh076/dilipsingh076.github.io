"use strict";(()=>{var e={};e.id=268,e.ids=[268],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1049:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>v,patchFetch:()=>y,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h});var n={};s.r(n),s.d(n,{DELETE:()=>p,GET:()=>c,PUT:()=>l});var a=s(9303),i=s(8716),r=s(3131),o=s(7070),u=s(4184),d=s(5033);async function c(e,{params:t}){try{await (0,u.v)();let e=await d.Z.findById(t.id).lean();if(!e)return o.NextResponse.json({success:!1,message:"Contact not found"},{status:404});return o.NextResponse.json({success:!0,contact:{...e,id:e._id.toString()}})}catch(e){return o.NextResponse.json({success:!1,message:"Failed to fetch contact"},{status:500})}}async function l(e,{params:t}){try{await (0,u.v)();let{status:s}=await e.json();if(!s||!["pending","read","replied"].includes(s))return o.NextResponse.json({success:!1,message:"Invalid status value"},{status:400});let n=await d.Z.findByIdAndUpdate(t.id,{status:s,updatedAt:new Date},{new:!0}).lean();if(!n)return o.NextResponse.json({success:!1,message:"Contact not found"},{status:404});return o.NextResponse.json({success:!0,contact:{...n,id:n._id.toString()}})}catch(e){return o.NextResponse.json({success:!1,message:"Failed to update contact"},{status:500})}}async function p(e,{params:t}){try{if(await (0,u.v)(),!await d.Z.findByIdAndDelete(t.id))return o.NextResponse.json({success:!1,message:"Contact not found"},{status:404});return o.NextResponse.json({success:!0,message:"Contact deleted successfully"})}catch(e){return o.NextResponse.json({success:!1,message:"Failed to delete contact"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/contact/[id]/route",pathname:"/api/contact/[id]",filename:"route",bundlePath:"app/api/contact/[id]/route"},resolvedPagePath:"/workspaces/dilipsingh076.github.io/src/app/api/contact/[id]/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:f}=m,v="/api/contact/[id]/route";function y(){return(0,r.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:h})}},5033:(e,t,s)=>{s.d(t,{Z:()=>o});var n=s(1185),a=s.n(n);let i=new n.Schema({subject:{type:String,required:!0,trim:!0},message:{type:String,required:!0},status:{type:String,enum:["pending","read","replied"],default:"pending"},sent_on:{type:Date},isAdminReply:{type:Boolean,default:!1},adminReplyTo:{type:String}},{timestamps:!0}),r=new n.Schema({name:{type:String,required:!0,trim:!0},email:{type:String,required:!0,trim:!0,unique:!0},phone:{type:String,trim:!0},company:{type:String,trim:!0},messages:[i],overallStatus:{type:String,enum:["pending","read","replied"],default:"pending"},lastMessageAt:{type:Date,required:!0},firstContactAt:{type:Date,required:!0}},{timestamps:!0});r.index({email:1}),r.index({overallStatus:1}),r.index({lastMessageAt:-1}),r.index({firstContactAt:-1}),r.methods.addMessage=function(e,t,s,n){return s&&(this.phone=s),n&&(this.company=n),this.messages.push({subject:e,message:t,status:"pending",createdAt:new Date}),this.lastMessageAt=new Date,this.firstContactAt||(this.firstContactAt=new Date),this.updateOverallStatus(),this.save()},r.methods.updateOverallStatus=function(){let e=this.messages.filter(e=>"pending"===e.status).length;this.messages.filter(e=>"replied"===e.status).length===this.messages.length?this.overallStatus="replied":0===e?this.overallStatus="read":this.overallStatus="pending"},r.methods.addAdminReply=function(e,t,s){return this.messages.push({subject:e,message:t,status:"replied",sent_on:new Date,isAdminReply:!0,adminReplyTo:s,createdAt:new Date}),this.lastMessageAt=new Date,this.updateOverallStatus(),this.save()},r.methods.markAllAsRead=function(){return this.messages.forEach(e=>{"pending"===e.status&&(e.status="read")}),this.updateOverallStatus(),this.save()},r.methods.markAllAsReplied=function(){return this.messages.forEach(e=>{"replied"!==e.status&&(e.status="replied",e.sent_on=new Date)}),this.updateOverallStatus(),this.save()};let o=a().models.Contact||a().model("Contact",r)},4184:(e,t,s)=>{s.d(t,{v:()=>u});var n=s(1185),a=s.n(n);let i=process.env.MONGODB_URI,r=process.env.MONGODB_DB_NAME||"portfolio";if(!i)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let o=global.mongoose||{conn:null,promise:null};async function u(){if(o.conn)return o.conn;o.promise||(o.promise=a().connect(i,{bufferCommands:!1,dbName:r}).then(e=>e));try{o.conn=await o.promise}catch(e){throw o.promise=null,e}return o.conn}global.mongoose||(global.mongoose=o)}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),n=t.X(0,[276,972],()=>s(1049));module.exports=n})();