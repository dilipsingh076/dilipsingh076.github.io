"use strict";(()=>{var e={};e.id=731,e.ids=[731],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},631:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>v,staticGenerationAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{GET:()=>u,POST:()=>c});var o=r(9303),i=r(8716),s=r(3131),a=r(7070),l=r(4184),p=r(4379);async function u(){try{await (0,l.v)();let e=await p.Z.find({}).sort({category:1,proficiency:-1});return a.NextResponse.json(e)}catch(e){return a.NextResponse.json({error:"Failed to fetch skills"},{status:500})}}async function c(e){try{await (0,l.v)();let t=await e.json(),r=new p.Z(t);return await r.save(),a.NextResponse.json(r,{status:201})}catch(e){return a.NextResponse.json({error:"Failed to create skill"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/skills/route",pathname:"/api/skills",filename:"route",bundlePath:"app/api/skills/route"},resolvedPagePath:"/workspaces/dilipsingh076.github.io/src/app/api/skills/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:v}=d,f="/api/skills/route";function h(){return(0,s.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:g})}},4379:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(1185),o=r.n(n);let i=new n.Schema({name:{type:String,required:!0,trim:!0,unique:!0},icon:{type:String,required:!0,trim:!0},category:{type:String,required:!0,enum:["frontend","backend","database","devops","tools"]},proficiency:{type:Number,required:!0,min:0,max:100}},{timestamps:!0});i.index({category:1}),i.index({proficiency:-1}),i.index({name:1});let s=o().models.Skill||o().model("Skill",i)},4184:(e,t,r)=>{r.d(t,{v:()=>l});var n=r(1185),o=r.n(n);let i=process.env.MONGODB_URI,s=process.env.MONGODB_DB_NAME||"portfolio";if(!i)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose||{conn:null,promise:null};async function l(){if(a.conn)return a.conn;a.promise||(a.promise=o().connect(i,{bufferCommands:!1,dbName:s}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}global.mongoose||(global.mongoose=a)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[276,972],()=>r(631));module.exports=n})();